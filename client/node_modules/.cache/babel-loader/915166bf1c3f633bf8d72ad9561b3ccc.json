{"ast":null,"code":"import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\nfunction* createNewUser({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const user = yield auth.createUserWithEmailAndPassword(email, password);\n    yield call(createUserProfileDocument, user, {\n      displayName\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* getSnaphotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    const userData = {\n      id: userRef.id,\n      ...userSnapshot.data()\n    };\n    yield put(signInSuccess(userData));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const userAuth = yield auth.signInWithPopup(googleProvider);\n    const {\n      user\n    } = userAuth;\n    yield call(getSnaphotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const userAuth = yield auth.signInWithEmailAndPassword(email, password);\n    const {\n      user\n    } = userAuth;\n    yield call(getSnaphotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield call(getSnaphotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* googleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nfunction* emailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nfunction* signOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\n\nfunction* signUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, createNewUser);\n}\n\nfunction* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart), call(onCheckUserSession), call(signOutStart), call(signUpStart)]);\n}\n\nexport default userSagas;","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","call","all","put","userActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","createNewUser","payload","email","password","displayName","user","createUserWithEmailAndPassword","error","signOut","getSnaphotFromUserAuth","userRef","userSnapshot","get","userData","id","data","signInWithGoogle","userAuth","signInWithPopup","signInWithEmail","signInWithEmailAndPassword","isUserAuthenticated","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","signUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, call, all, put} from 'redux-saga/effects';\r\nimport userActionTypes from './user.types'\r\nimport {\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure,\r\n    signUpFailure\r\n    } from './user.actions';\r\n\r\nimport {\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser\r\n} from '../../firebase/firebase.utils';\r\n\r\nfunction* createNewUser({payload:{email, password, displayName}}){\r\n   try{\r\n       const user = yield auth.createUserWithEmailAndPassword(email, password);\r\n       yield call(createUserProfileDocument, user, {displayName});\r\n\r\n   }catch(error){\r\n       yield put(signUpFailure(error));\r\n   }\r\n\r\n}\r\n\r\nfunction* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    }catch(error){\r\n        yield put(signOutFailure(error))\r\n    }\r\n\r\n}\r\n\r\nfunction* getSnaphotFromUserAuth(user){\r\n    try{\r\n    const userRef=yield call(createUserProfileDocument, user);\r\n    const userSnapshot =yield userRef.get();\r\n\r\n    const userData = {id: userRef.id, ...userSnapshot.data()};\r\n\r\n    yield put(signInSuccess(userData));\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* signInWithGoogle(){\r\n    try {\r\n        const userAuth =yield auth.signInWithPopup(googleProvider);\r\n        const {user} = userAuth;\r\n        yield call(getSnaphotFromUserAuth, user);\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* signInWithEmail({payload:{email, password}}){\r\n    try {\r\n        const userAuth =yield auth.signInWithEmailAndPassword(email, password);\r\n        const {user} = userAuth;\r\n        yield call(getSnaphotFromUserAuth, user);\r\n        \r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* isUserAuthenticated(){\r\n    try {\r\n        const userAuth =yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield call(getSnaphotFromUserAuth, userAuth);        \r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* googleSignInStart(){\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nfunction* emailSignInStart(){\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail )\r\n}\r\n\r\nfunction* onCheckUserSession(){\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nfunction* signOutStart(){\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nfunction* signUpStart(){\r\n    yield takeLatest(userActionTypes.SIGN_UP_START, createNewUser)\r\n}\r\n\r\n\r\nfunction* userSagas(){\r\n    yield all([\r\n        call(googleSignInStart),\r\n        call(emailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(signOutStart),\r\n        call(signUpStart)\r\n    ])\r\n}\r\n\r\nexport default userSagas;"]},"metadata":{},"sourceType":"module"}