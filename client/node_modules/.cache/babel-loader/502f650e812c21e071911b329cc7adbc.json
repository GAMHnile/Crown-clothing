{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\George\\\\Desktop\\\\React\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    emailSignInStart({\n      email,\n      password\n    });\n    setUserCredentials({\n      email: '',\n      password: ''\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"email\",\n    onChange: handleChange,\n    value: email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"password\",\n    onChange: handleChange,\n    value: password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: emailAndPassword => dispatch(emailSignInStart(emailAndPassword))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignIn","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch","emailAndPassword"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport './sign-in.styles.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\r\n\r\nconst SignIn=({emailSignInStart, googleSignInStart})=>{\r\n    const [userCredentials, setUserCredentials] = useState({email: '', password: ''})\r\n\r\n    const {email, password}=userCredentials;\r\n    \r\n    const handleSubmit= event=>{\r\n        event.preventDefault();\r\n        emailSignInStart({email, password});\r\n\r\n        setUserCredentials({email: '', password: ''})\r\n\r\n\r\n    }\r\n\r\n    const handleChange=event=>{\r\n        const {name, value}=event.target;\r\n        setUserCredentials({...userCredentials,[name]: value})\r\n\r\n    }\r\n\r\n    return(\r\n        <div className='sign-in'>\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                \r\n                <FormInput name='email' type='email' label='email' \r\n                onChange={handleChange}\r\n                value={email} required />\r\n                \r\n                \r\n                <FormInput name='password' type='password' label='password'\r\n                onChange={handleChange}\r\n                value={password} required/>\r\n            <div className='buttons'>\r\n                <CustomButton type='submit'  >Sign in</CustomButton>\r\n                <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn >Sign in with Google</CustomButton>\r\n                                \r\n            </div>\r\n            </form>\r\n    \r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    googleSignInStart: ()=>dispatch(googleSignInStart()),\r\n    emailSignInStart: emailAndPassword=>dispatch(emailSignInStart(emailAndPassword))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}