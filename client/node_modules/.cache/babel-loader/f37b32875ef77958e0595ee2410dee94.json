{"ast":null,"code":"import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\n\nfunction* signOut() {\n  try {\n    yield call(auth.signOut);\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nfunction* getSnaphotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    const userData = {\n      id: userRef.id,\n      ...userSnapshot.data()\n    };\n    yield put(signInSuccess(userData));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const userAuth = yield auth.signInWithPopup(googleProvider);\n    const {\n      user\n    } = userAuth;\n    yield call(getSnaphotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const userAuth = yield auth.signInWithEmailAndPassword(email, password);\n    const {\n      user\n    } = userAuth;\n    yield call(getSnaphotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield call(getSnaphotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nfunction* googleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nfunction* emailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nfunction* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nfunction* signOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\n\nfunction* userSagas() {\n  yield all([call(googleSignInStart), call(emailSignInStart), call(onCheckUserSession), call(signOutStart)]);\n}\n\nexport default userSagas;","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","call","all","put","userActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","signOut","error","getSnaphotFromUserAuth","user","userRef","userSnapshot","get","userData","id","data","signInWithGoogle","userAuth","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest, call, all, put} from 'redux-saga/effects';\r\nimport userActionTypes from './user.types'\r\nimport {\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutSuccess,\r\n    signOutFailure\r\n    } from './user.actions';\r\n\r\nimport {\r\n    auth,\r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser\r\n} from '../../firebase/firebase.utils';\r\n\r\nfunction* signOut(){\r\n    try{\r\n        yield call(auth.signOut);\r\n        yield put(signOutSuccess());\r\n    }catch(error){\r\n        yield put(signOutFailure(error))\r\n    }\r\n\r\n}\r\n\r\nfunction* getSnaphotFromUserAuth(user){\r\n    try{\r\n    const userRef=yield call(createUserProfileDocument, user);\r\n    const userSnapshot =yield userRef.get();\r\n\r\n    const userData = {id: userRef.id, ...userSnapshot.data()};\r\n\r\n    yield put(signInSuccess(userData));\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* signInWithGoogle(){\r\n    try {\r\n        const userAuth =yield auth.signInWithPopup(googleProvider);\r\n        const {user} = userAuth;\r\n        yield call(getSnaphotFromUserAuth, user);\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* signInWithEmail({payload:{email, password}}){\r\n    try {\r\n        const userAuth =yield auth.signInWithEmailAndPassword(email, password);\r\n        const {user} = userAuth;\r\n        yield call(getSnaphotFromUserAuth, user);\r\n        \r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n\r\n}\r\n\r\nfunction* isUserAuthenticated(){\r\n    try {\r\n        const userAuth =yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield call(getSnaphotFromUserAuth, userAuth);        \r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* googleSignInStart(){\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nfunction* emailSignInStart(){\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail )\r\n}\r\n\r\nfunction* onCheckUserSession(){\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nfunction* signOutStart(){\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\n\r\nfunction* userSagas(){\r\n    yield all([\r\n        call(googleSignInStart),\r\n        call(emailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(signOutStart)\r\n    ])\r\n}\r\n\r\nexport default userSagas;"]},"metadata":{},"sourceType":"module"}