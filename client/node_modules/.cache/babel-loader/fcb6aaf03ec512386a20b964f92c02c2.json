{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => {\n  return cartItems.reduce((accumulatedItems, item) => accumulatedItems + item.quantity, 0);\n});\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectTotal = createSelector([selectCartItems], cartItems => {\n  return cartItems.reduce((accumulatedItemsPrice, item) => accumulatedItemsPrice + item.quantity * item.price, 0);\n});","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedItems","item","quantity","selectCartHidden","hidden","selectTotal","accumulatedItemsPrice","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAAC,CAACC,UAAD,CAAD,EAAeE,IAAI,IAAGA,IAAI,CAACE,SAA3B,CAAtC;AAEP,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAAC,CAACI,eAAD,CAAD,EAAoBC,SAAS,IAAE;AAC7E,SAAOA,SAAS,CAACE,MAAV,CAAiB,CAACC,gBAAD,EAAmBC,IAAnB,KAA0BD,gBAAgB,GAACC,IAAI,CAACC,QAAjE,EAA2E,CAA3E,CAAP;AAAqF,CADvC,CAA3C;AAGP,OAAO,MAAMC,gBAAgB,GAAEX,cAAc,CAAC,CAACC,UAAD,CAAD,EAAeE,IAAI,IAAGA,IAAI,CAACS,MAA3B,CAAtC;AAEP,OAAO,MAAMC,WAAW,GAAEb,cAAc,CAAC,CAACI,eAAD,CAAD,EAAoBC,SAAS,IAAE;AACnE,SAAOA,SAAS,CAACE,MAAV,CAAiB,CAACO,qBAAD,EAAwBL,IAAxB,KAA+BK,qBAAqB,GAAEL,IAAI,CAACC,QAAL,GAAcD,IAAI,CAACM,KAA1F,EAAkG,CAAlG,CAAP;AAA4G,CADxE,CAAjC","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\nconst selectCart = state => state.cart;\r\n\r\nexport const selectCartItems = createSelector([selectCart], cart=> cart.cartItems);\r\n\r\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems=>{\r\n    return cartItems.reduce((accumulatedItems, item)=>accumulatedItems+item.quantity ,0)});\r\n\r\nexport const selectCartHidden= createSelector([selectCart], cart=> cart.hidden);\r\n\r\nexport const selectTotal= createSelector([selectCartItems], cartItems=>{\r\n    return cartItems.reduce((accumulatedItemsPrice, item)=>accumulatedItemsPrice+(item.quantity*item.price ),0)});"]},"metadata":{},"sourceType":"module"}