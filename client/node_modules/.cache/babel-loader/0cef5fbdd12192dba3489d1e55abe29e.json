{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nfunction* fetchCollectionsAsync() {\n  try {\n    const collectionsRef = yield firestore.collection('collections');\n    const snapshot = yield collectionsRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","shopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","collectionsRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,uBAAR,EACQC,uBADR,QACsC,gBADtC;AAGA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;;AAEA,UAAUC,qBAAV,GAAiC;AAC7B,MAAI;AACA,UAAMC,cAAc,GAAE,MAAMH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMF,cAAc,CAACG,GAAf,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACM,+BAAD,EAAkCI,QAAlC,CAAjC;AAEA,UAAMT,GAAG,CAACE,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACG,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,SAAS,CAAEG,eAAe,CAACc,uBAAlB,EAA0CT,qBAA1C,CAAf;AACH","sourcesContent":["import {takeEvery, call, put} from 'redux-saga/effects';\r\nimport shopActionTypes from './shop.types';\r\nimport {fetchCollectionsSuccess,\r\n        fetchCollectionsFailure} from './shop.actions'\r\n\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nfunction* fetchCollectionsAsync(){\r\n    try {\r\n        const collectionsRef =yield firestore.collection('collections');\r\n        const snapshot = yield collectionsRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n        \r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    } catch (error) {\r\n        yield put(fetchCollectionsFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery( shopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync)\r\n}"]},"metadata":{},"sourceType":"module"}