{"ast":null,"code":"import shopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS\n});\nexport const fetchCollectionsSuccess = collections => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collections\n});\nexport const fetchCollectionsFail = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAIL,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    dispatch(fetchCollectionsStart());\n    const collectionsRef = firestore.collection('collections');\n    collectionsRef.get().then(async snapshot => {\n      const collection = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collection));\n    }).catch(error => dispatch(fetchCollectionsFail(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsSuccess","collections","payload","fetchCollectionsFail","errorMessage","FETCH_COLLECTIONS_FAIL","fetchCollectionsStartAsync","dispatch","collectionsRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAK;AACtCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADgB,CAAL,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,WAAW,KAAG;AACjDH,EAAAA,IAAI,EAAEJ,eAAe,CAACK,yBAD2B;AAEjDG,EAAAA,OAAO,EAAED;AAFwC,CAAH,CAA3C;AAKP,OAAO,MAAME,oBAAoB,GAAGC,YAAY,KAAG;AAC/CN,EAAAA,IAAI,EAAEJ,eAAe,CAACW,sBADyB;AAE/CH,EAAAA,OAAO,EAAEE;AAFsC,CAAH,CAAzC;AAKP,OAAO,MAAME,0BAA0B,GAAC,MAAI;AACxC,SAAOC,QAAQ,IAAG;AACdA,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACA,UAAMW,cAAc,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAvB;AACAD,IAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA0B,MAAMC,QAAN,IAAgB;AACtC,YAAMH,UAAU,GAAGb,+BAA+B,CAACgB,QAAD,CAAlD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACS,UAAD,CAAxB,CAAR;AACH,KAHD,EAGGI,KAHH,CAGSC,KAAK,IAAGP,QAAQ,CAACJ,oBAAoB,CAACW,KAAK,CAACC,OAAP,CAArB,CAHzB;AAIH,GAPD;AAQH,CATM","sourcesContent":["import shopActionTypes from './shop.types';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\nexport const fetchCollectionsStart = ()=>({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collections=>({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collections\r\n});\r\n\r\nexport const fetchCollectionsFail = errorMessage=>({\r\n    type: shopActionTypes.FETCH_COLLECTIONS_FAIL,\r\n    payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync=()=>{\r\n    return dispatch =>{\r\n        dispatch(fetchCollectionsStart());\r\n        const collectionsRef = firestore.collection('collections');\r\n        collectionsRef.get().then(async snapshot=>{\r\n            const collection = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collection));    \r\n        }).catch(error=> dispatch(fetchCollectionsFail(error.message)))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}