{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\George\\\\Desktop\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport './shop.styles.scss';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsFetchingCollections } from '../../redux/shop/shop.selectors';\nimport { createStructuredSelector } from 'reselect';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchCollections();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: match.path,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 36\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 36\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsFetchingCollections\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollections: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionOverview","CollectionPage","WithSpinner","Route","connect","fetchCollectionsStartAsync","selectIsFetchingCollections","createStructuredSelector","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","fetchCollections","render","match","isFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,2BAAR,QAA0C,iCAA1C;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;AAGA,MAAMC,6BAA6B,GAAGN,WAAW,CAACF,kBAAD,CAAjD;AACA,MAAMS,yBAAyB,GAAGP,WAAW,CAACD,cAAD,CAA7C;;AAGA,MAAMS,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAElCC,EAAAA,iBAAiB,GAAE;AAChB,SAAKC,KAAL,CAAWC,gBAAX;AACF;;AACDC,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKH,KAAnB;AACA,UAAM;AAACI,MAAAA;AAAD,QAAa,KAAKJ,KAAxB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEG,KAAK,CAACE,IAAzB;AACC,MAAA,MAAM,EAAGL,KAAD,iBAAU,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEI;AAA1C,SAA0DJ,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACE,IAAK,gBAA3B;AACC,MAAA,MAAM,EAAGL,KAAD,iBAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEI;AAAtC,SAAsDJ,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQH;;AAjBiC;;AAoBtC,MAAMM,eAAe,GAAGZ,wBAAwB,CAAC;AAC7CU,EAAAA,UAAU,EAAEX;AADiC,CAAD,CAAhD;;AAKA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAI;AACnCP,EAAAA,gBAAgB,EAAE,MAAIO,QAAQ,CAAChB,0BAA0B,EAA3B;AADK,CAAJ,CAAnC;;AAMA,eAAeD,OAAO,CAACe,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport './shop.styles.scss';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\nimport {selectIsFetchingCollections} from '../../redux/shop/shop.selectors';\r\n\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\n\r\nclass ShopPage extends React.Component{\r\n   \r\n    componentDidMount(){\r\n       this.props.fetchCollections(); \r\n    }\r\n    render(){\r\n\r\n        const {match}=this.props;\r\n        const {isFetching}=this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route exact path={match.path}\r\n                 render={(props)=> <CollectionOverviewWithSpinner isLoading={isFetching} {...props} />} /> \r\n                <Route path={`${match.path}/:collectionId`} \r\n                 render={(props)=> <CollectionPageWithSpinner isLoading={isFetching} {...props} />} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isFetching: selectIsFetchingCollections\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    fetchCollections: ()=>dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}