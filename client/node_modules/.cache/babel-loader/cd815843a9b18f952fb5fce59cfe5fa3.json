{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\George\\\\Desktop\\\\React\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport './shop.styles.scss';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionsRef = firestore.collection('collections');\n    collectionsRef.get().then(async snapshot => {\n      const collection = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collection);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: match.path,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 36\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionOverview","CollectionPage","WithSpinner","Route","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionsRef","collection","get","then","snapshot","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,SAAQC,KAAR,QAAoB,kBAApB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AAEA,MAAMC,6BAA6B,GAAGN,WAAW,CAACF,kBAAD,CAAjD;AACA,MAAMS,yBAAyB,GAAGP,WAAW,CAACD,cAAD,CAA7C;;AAGA,MAAMS,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD0B;AAAA,SAKlCC,uBALkC,GAKR,IALQ;AAAA;;AAOlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACV,MAAAA;AAAD,QAAqB,KAAKW,KAAhC;AACA,UAAMC,cAAc,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAvB;AACAD,IAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA0B,MAAMC,QAAN,IAAgB;AACtC,YAAMH,UAAU,GAAGX,+BAA+B,CAACc,QAAD,CAAlD;AACAhB,MAAAA,iBAAiB,CAACa,UAAD,CAAjB;AACA,WAAKI,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAKH;;AACDU,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKR,KAAnB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAEY,KAAK,CAACC,IAAzB;AACC,MAAA,MAAM,EAAGT,KAAD,iBAAU,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAA3B;AACC,MAAA,MAAM,EAAGT,KAAD,iBAAU,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAQH;;AA3BiC;;AA8BtC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAI;AACnCtB,EAAAA,iBAAiB,EAAEuB,cAAc,IAAED,QAAQ,CAACtB,iBAAiB,CAACuB,cAAD,CAAlB;AADR,CAAJ,CAAnC;;AAMA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport './shop.styles.scss';\r\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {updateCollections} from '../../redux/shop/shop.actions';\r\n\r\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\n\r\nclass ShopPage extends React.Component{\r\n    state = {\r\n        loading: true\r\n    }\r\n    \r\n    unsubscribeFromSnapshot = null;\r\n   \r\n    componentDidMount(){\r\n        const {updateCollections}= this.props\r\n        const collectionsRef = firestore.collection('collections');\r\n        collectionsRef.get().then(async snapshot=>{\r\n            const collection = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collection);\r\n            this.setState({loading: false})    \r\n        })\r\n    }\r\n    render(){\r\n        const {match}=this.props;\r\n        const {loading}=this.state;\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route exact path={match.path}\r\n                 render={(props)=> <CollectionOverviewWithSpinner isLoading={loading} {...props} />} /> \r\n                <Route path={`${match.path}/:collectionId`} \r\n                 render={(props)=> <CollectionPageWithSpinner isLoading={loading} {...props} />} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    updateCollections: collectionsMap=>dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}