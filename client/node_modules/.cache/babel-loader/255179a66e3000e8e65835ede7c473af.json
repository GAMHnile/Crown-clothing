{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\George\\\\Desktop\\\\React\\\\crwn-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.components.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"I dont have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Sign up with email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    label: \"Display name\",\n    value: displayName,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    value: password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    label: \"Confirm password\",\n    value: confirmPassword,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Signup\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: emailPasswordAndDisplayName => dispatch(signUpStart(emailPasswordAndDisplayName))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/George/Desktop/React/crwn-clothing/src/components/sign-up/sign-up.components.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleChange","event","name","value","target","handleSubmit","preventDefault","alert","mapDispatchToProps","dispatch","emailPasswordAndDisplayName"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,uBAAP;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,WAAR,QAA0B,+BAA1B;;AAEA,MAAMC,MAAM,GAAC,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAiB;AAC1B,QAAM,CAACE,eAAD,EAAkBC,cAAlB,IAAoCP,QAAQ,CAAC;AAC/CQ,IAAAA,WAAW,EAAE,EADkC;AAE/CC,IAAAA,KAAK,EAAE,EAFwC;AAG/CC,IAAAA,QAAQ,EAAC,EAHsC;AAI/CC,IAAAA,eAAe,EAAE;AAJ8B,GAAD,CAAlD;AAOA,QAAM;AAACH,IAAAA,WAAD;AAAaC,IAAAA,KAAb;AAAmBC,IAAAA,QAAnB;AAA4BC,IAAAA;AAA5B,MAA6CL,eAAnD;;AAEA,QAAMM,YAAY,GAACC,KAAK,IAAE;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAcF,KAAK,CAACG,MAA1B;AACAT,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAoB,OAACQ,IAAD,GAAQC;AAA5B,KAAD,CAAd;AACH,GAHD;;AAKA,QAAME,YAAY,GAAEJ,KAAK,IAAE;AACvBA,IAAAA,KAAK,CAACK,cAAN;;AAEA,QAAGR,QAAQ,KAAGC,eAAd,EAA8B;AAC1BQ,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACH;;AAEDf,IAAAA,WAAW,CAAC;AAACK,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBF,MAAAA;AAAlB,KAAD,CAAX;AACH,GATD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,eAMA;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAES,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAC,aADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,KAAK,EAAC,cAHN;AAIA,IAAA,KAAK,EAAET,WAJP;AAKA,IAAA,QAAQ,EAAEI,YALV;AAMA,IAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAUI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAC,OADL;AAEA,IAAA,IAAI,EAAC,OAFL;AAGA,IAAA,KAAK,EAAC,OAHN;AAIA,IAAA,KAAK,EAAEH,KAJP;AAKA,IAAA,QAAQ,EAAEG,YALV;AAMA,IAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,eAkBI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,KAAK,EAAC,UAHN;AAIA,IAAA,KAAK,EAAEF,QAJP;AAKA,IAAA,QAAQ,EAAEE,YALV;AAMA,IAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,eA0BI,oBAAC,SAAD;AACA,IAAA,IAAI,EAAC,iBADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,KAAK,EAAC,kBAHN;AAIA,IAAA,KAAK,EAAED,eAJP;AAKA,IAAA,QAAQ,EAAEC,YALV;AAMA,IAAA,QAAQ,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,eAkCI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCJ,CANA,CADJ;AAiDH,CA5ED;;AAgFA,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAI;AACnCjB,EAAAA,WAAW,EAAEkB,2BAA2B,IAAED,QAAQ,CAACjB,WAAW,CAACkB,2BAAD,CAAZ;AADf,CAAJ,CAAnC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCf,MAAlC,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport './sign-up.styles.scss';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\n\r\nconst SignUp=({signUpStart})=>{\r\n    const [userCredentials, setCredentials] = useState({\r\n        displayName: '',\r\n        email: '',\r\n        password:'',\r\n        confirmPassword: ''\r\n    })\r\n\r\n    const {displayName,email,password,confirmPassword}=userCredentials;\r\n\r\n    const handleChange=event=>{\r\n        const {name, value}=event.target;\r\n        setCredentials({...userCredentials,[name]: value});\r\n    }\r\n\r\n    const handleSubmit= event=>{\r\n        event.preventDefault();\r\n        \r\n        if(password!==confirmPassword){\r\n            alert('Passwords do not match')\r\n            return\r\n        }\r\n\r\n        signUpStart({email, password, displayName})\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className='sign-up'>\r\n            <h2 className='title'>I dont have an account</h2>\r\n            <span>Sign up with email and password</span>\r\n\r\n\r\n        \r\n        <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        \r\n            <FormInput \r\n            name='displayName' \r\n            type='text' \r\n            label='Display name'\r\n            value={displayName} \r\n            onChange={handleChange} \r\n            required />\r\n\r\n            <FormInput \r\n            name='email' \r\n            type='email' \r\n            label='Email'\r\n            value={email} \r\n            onChange={handleChange} \r\n            required/>\r\n\r\n            <FormInput \r\n            name='password' \r\n            type='password' \r\n            label='Password'\r\n            value={password} \r\n            onChange={handleChange} \r\n            required/>\r\n\r\n            <FormInput \r\n            name='confirmPassword' \r\n            type='password' \r\n            label='Confirm password'\r\n            value={confirmPassword} \r\n            onChange={handleChange} \r\n            required/>\r\n\r\n            <CustomButton type='submit'>Signup</CustomButton>\r\n        </form>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    signUpStart: emailPasswordAndDisplayName=>dispatch(signUpStart(emailPasswordAndDisplayName))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}